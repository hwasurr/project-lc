generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["selectRelationCount", "orderByRelation", "referentialActions"]
}

// generator docs {
//   provider = "node ../../node_modules/prisma-docs-generator"
// }

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Seller {
  id             Int                   @id @default(autoincrement())
  email          String                @unique
  name           String?
  password       String? // 소셜로그인으로 로그인하는 경우, 비밀번호가 없을 수 있다.
  socialAccounts SellerSocialAccount[]
  goods          Goods[]
}

model MailVerificationCode {
  id               Int      @id @default(autoincrement())
  email            String   @default("")
  verificationCode String
  createDate       DateTime @default(now())
}

model SellerSocialAccount {
  serviceId    String   @id // 인증 결과로 해당 서비스에서 받은 고유 식별자
  provider     String // 'google' | 'kakao' | 'naver'
  name         String
  registDate   DateTime @default(now())
  profileImage String?
  accessToken  String?
  refreshToken String?
  seller       Seller   @relation(fields: [sellerId], references: [id], onDelete: Cascade)
  sellerId     Int
}

// ****************************
// * firstmall과 동일한 상품 정보 (컬럼명도 동일하게 가져갑니다.)
// 상품 - fm_goods
model Goods {
  id                      Int                @id @default(autoincrement())
  sellerId                Int
  seller                  Seller             @relation(fields: [sellerId], references: [id], onDelete: Cascade)
  options                 GoodsOptions[]
  confirmation            GoodsConfirmation? // 상품 검수
  // 여기서부터는 퍼스트몰 컬럼과 동일한 컬럼
  goods_name              String // 상품명
  summary                 String // 간략 설명
  goods_status            GoodsStatus        @default(normal) // 상품 상태
  cancel_type             String             @default("0") // 청약철회 가능 여부, "0" or "1"
  contents                String?            @db.LongText // 상세 설명 PC 화면
  contents_mobile         String?            @db.LongText // 상세 설명 Mobile 화면
  common_contents         String             @db.LongText // 상품 공통 정보
  shipping_policy         ShopOrGoods        @default(shop) // 배송 정책 선택
  goods_shipping_policy   LimitOrUnlimit     @default(unlimit) // 개별 배송비 선택
  unlimit_shipping_price  Int?               @db.UnsignedInt // 배송비
  limit_shipping_ea       Int?               @db.UnsignedTinyInt // 개별 배송 포장 단위
  limit_shipping_price    Int?               @db.UnsignedInt // 개별 배송 단위별 배송비
  limit_shipping_subprice Int?               @db.UnsignedTinyInt // 개별 배송 추가 배송비
  shipping_weight_policy  ShopOrGoods        @default(shop) // 해외 배송 중량 정책
  min_purchase_limit      LimitOrUnlimit     @default(unlimit) // 최소 구매 수량 사용 여부
  min_purchase_ea         Int?               @db.UnsignedMediumInt // 최소 구매 수량
  max_purchase_limit      LimitOrUnlimit     @default(unlimit) // 최대 구매 수량 사용 여부
  max_purchase_ea         Int?               @db.UnsignedMediumInt // 최대 구매 수량
  max_urchase_order_limit Int?               @db.UnsignedMediumInt // 최대 구매 수량 주문 횟수
  admin_memo              String?            @db.Text // 관리자 메모
  option_use              String             @default("0") // 옵션 사용 여부 "0" or "1"
  option_view_type        OptionViewType     @default(divide) // 필수옵션-분리/합체형 구분
  option_suboption_use    String             @default("0") // 추가 옵션 사용 여부 "0" or "1"
  member_input_use        String             @default("0") // 추가 구성 옵션 사용 여부 "0" or "1"
  image                   String // 상품 이미지 - fm_goods_image
  goods_view              GoodsView          @default(look) // 노출
  regist_date             DateTime           @default(now()) // 상품등록일 (project-lc 에 판매자가 등록한 날짜)
  update_date             DateTime           @default(now()) @updatedAt // 수정일 (퍼스트몰에는 코멘트에 구매수량 이라고 되어있음, project-lc 에서 수정한 날짜)
  runout_policy           RunoutPolicy?      @default(unlimited) // 재고 정책
}

// 상품 검수 정보
model GoodsConfirmation {
  id                         Int                       @id @default(autoincrement())
  goodsId                    Int
  goods                      Goods                     @relation(fields: [goodsId], references: [id], onDelete: Cascade)
  status                     GoodsConfirmationStatuses @default(waiting) // 검수 상태
  firstmallGoodsConnectionId Int? // 퍼스트몰 상품 고유 ID (fm_goods.goods_seq)
}

// 상품 검수 상태 정보
enum GoodsConfirmationStatuses {
  waiting // 대기
  confirmed // 승인
  rejected // 거절
}

// 상품 옵션 - fm_goods_option
model GoodsOptions {
  id             Int                    @id @default(autoincrement())
  goods          Goods                  @relation(fields: [goodsId], references: [id], onDelete: Cascade)
  goodsId        Int
  supply         GoodsOptionsSupplies[]
  // 여기서부터는 퍼스트몰 컬럼과 동일한 컬럼
  default_option YesOrNo                @default(n) // 옵션 필수 여부
  option_type    String                 @default("direct") // 기본값인듯? 설명도 direct
  option_title   String? // 옵션명 fm_goods_options.option_title
  option1        String? // 옵션값 fm_goods_options.option1
  option_code    String? // 옵션코드
  consumer_price Decimal                @db.Decimal(10, 2) // 소비자가 (미할인가)
  price          Decimal                @db.Decimal(10, 2) // 판매가 (할인가)
  color          String?                @db.VarChar(10) // 컬러 hex값
  weight         Float? //옵션 개당 무게 (단위 kg)
  option_view    YesOrNo_UPPERCASE      @default(Y) // 옵션 노출 여부
}

// 상품 옵션 재고 - fm_goods_suply
model GoodsOptionsSupplies {
  id             Int          @id @default(autoincrement())
  goodsOptions   GoodsOptions @relation(fields: [goodsOptionsId], references: [id], onDelete: Cascade)
  goodsOptionsId Int
  // 여기서부터는 퍼스트몰 컬럼과 동일한 컬럼
  stock          Int          @db.UnsignedInt // 재고
  badstock       Int?         @db.UnsignedInt // 불량재고
  safe_stock     Int?         @default(0) // 각 매장의 옵션별 안전 재고
}

// * 상품 - 상태
enum GoodsStatus {
  normal // 정상
  runout // 품절
  purchasing // 재고확보중
  unsold // 판매중지
}

// * 상품 - 노출
enum GoodsView {
  look // 노출
  notLook // 미노출
}

// * 상품 - 재고 정책 (재고판매)
enum RunoutPolicy {
  stock //재고
  ableStock //가용재고
  unlimited //무제한
}

// * 상품 - 배송 정책 선택
// * 상품 - 헤외 배송 중량 정책
enum ShopOrGoods {
  shop
  goods
}

// * 상품 - 개별 배송비 선택
// * 상품 - 최소 구매 수량 사용 여부
// * 상품 - 최대 구매 수량 사용 여부
enum LimitOrUnlimit {
  unlimit
  limit
}

// * 상품 - 필수옵션-분리/합체형 구분
enum OptionViewType {
  divide
  join
}

// * 옵션 필수 여부
enum YesOrNo {
  y
  n
}

// * 옵션 노출 여부
enum YesOrNo_UPPERCASE {
  Y
  N
}
