on:
  pull_request:
    branches: [master, staging, dev]

name: Continous Integration Workflow
jobs:
  Lint:
    name: Lint Job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install Dependencies
        uses: bahmutov/npm-install@v1
      - name: Check Lint all affected apps and libs
        run: yarn affected:lint --base="origin/${GITHUB_BASE_REF}"
  Test:
    name: Test Job
    runs-on: ubuntu-latest
    env:
      NODE_ENV: ci
      DATABASE_URL: mysql://root:qwer1234@localhost/public
      REDIS_URL: localhost:6379
      JWT_SECRET: DUMMY_JWT_SECRET
      CIPHER_HASH: DUMMY_CIPHER_HAS
      CIPHER_PASSWORD: DUMMY_CIPHER_PASSWORD
      CIPHER_SALT: DUMMY_CIPHER_SALT
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup Dependency Containers
        run: docker-compose up -d
      - name: Install Dependencies
        uses: bahmutov/npm-install@v1
      - name: Primsa generate # Generate Prisma Client
        run: yarn nx run prisma-orm:prisma-generate
      - name: Prisma Migrate # Migrate Prisma Schema to DB
        run: yarn nx run prisma-orm:migrate-dev
      - name: Run tests all affected apps and libs
        run: yarn affected:test --base="origin/${GITHUB_BASE_REF}"
  Build:
    name: Build Job
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: mysql://root:qwer1234@localhost/public
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install Dependencies
        uses: bahmutov/npm-install@v1
      - name: Setup Dependency Containers
        run: docker-compose up -d
      - name: Execute migrate reset and Generate Prisma
        run: yarn prisma migrate reset
        env:
          DATABASE_URL: ${{ secrets.DEV_PRISMA_DATABASE_URL }}
      - name: Run Build all affected apps and libs
        run: yarn affected:build --base="origin/${GITHUB_BASE_REF}"
