on:
  push:
    branches: [master]

name: Dev deploy to AWS ECS - "api"

jobs:
  api-deploy:
    name: Deploy
    runs-on: self-hosted

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PROJECT_LC }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROJECT_LC }}
          aws-region: ap-northeast-2

      #  Install All Dependencies
      - name: Install dependencies
        uses: bahmutov/npm-install@v1 # install dependencies using cache

      - name: Primsa generate
        run: yarn nx run prisma-orm:prisma-generate

      #  Build API server
      - name: Build "api"
        run: yarn build api --prod

      - name: Dockerize "api"
        run: yarn nx dockerize api --args="--username=${{ secrets.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }} --tag=${{ github.sha }}"

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: apps/api/task-definition.json
          container-name: project-lc-api
          image: ${{ secrets.DOCKER_USERNAME }}/project-lc-api:${{ github.sha }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: project-lc-api-service
          cluster: project-lc
          wait-for-service-stability: false

      - name: Prisma Migrate
        run: yarn nx run prisma-orm:migrate-deploy
        env:
          DATABASE_URL: ${{ secrets.DEV_PRISMA_DATABASE_URL }}
